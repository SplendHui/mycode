/*
Description 
【问题背景】 
栈是计算机中经典的数据结构，简单的说，栈就是限制在一端进行插入删除操作的线性表。 栈有两种最重要的操作，即pop（从栈顶弹出一个元素）和push（将一个元素进栈）。 栈的重要性不言自明，任何一门数据结构的课程都会介绍栈。宁宁同学在复习栈的基本概念时，想到了一个书上没有讲过的问题，而他自己无法给出答案，所以需要你的帮忙。 
【问题描述】 
 
宁宁考虑的是这样一个问题：一个操作数序列，从1，2，一直到n（图示为1到3的情况），栈A的深度大于n。 现在可以进行两种操作， 1.将一个数，从操作数序列的头端移到栈的头端（对应数据结构栈的push操作） 2. 将一个数，从栈的头端移到输出序列的尾端（对应数据结构栈的pop操作） 使用这两种操作，由一个操作数序列就可以得到一系列的输出序列，下图所示为由1 2 3生成序列2 3 1的过程。（原始状态如上图所示） 
 
你的程序将对给定的n，计算并输出由操作数序列1，2，…，n经过操作可能得到的输出序列的总数。 
Input 
输入有多组数据，对于每一组数据：只含一个整数n（1<=n<=18） 
Output 
输出可能输出序列的总数目 
Sample Input 
3
3
Sample Output 
5
5
*/
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int e[20];
int main(){
	int n;
	cin >>n;
	e[0]=e[1]=1;
	for(int i=2;i<=n;i++){
		for(int j=0;j<i;j++){
			e[i]+=e[j]*e[i-j-1];
		}
	}
	cout<< e[n]<<endl;
	return 0;
}